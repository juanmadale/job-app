[{"/Users/juanma.dale/Desktop/board application/job-app/src/index.js":"1","/Users/juanma.dale/Desktop/board application/job-app/src/App.js":"2","/Users/juanma.dale/Desktop/board application/job-app/src/reportWebVitals.js":"3","/Users/juanma.dale/Desktop/board application/job-app/src/JobList.js":"4","/Users/juanma.dale/Desktop/board application/job-app/src/JobDetails.js":"5","/Users/juanma.dale/Desktop/board application/job-app/src/NotFound.js":"6","/Users/juanma.dale/Desktop/board application/job-app/src/contexts/jobs.context.js":"7","/Users/juanma.dale/Desktop/board application/job-app/src/JobCard.js":"8","/Users/juanma.dale/Desktop/board application/job-app/src/SearchBar.js":"9","/Users/juanma.dale/Desktop/board application/job-app/src/reducers/jobs.reducer.js":"10"},{"size":544,"mtime":1621894644000,"results":"11","hashOfConfig":"12"},{"size":588,"mtime":1621894644000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1621894644000,"results":"14","hashOfConfig":"12"},{"size":2842,"mtime":1621894644000,"results":"15","hashOfConfig":"12"},{"size":3459,"mtime":1621894644000,"results":"16","hashOfConfig":"12"},{"size":385,"mtime":1621894644000,"results":"17","hashOfConfig":"12"},{"size":1047,"mtime":1621968274664,"results":"18","hashOfConfig":"12"},{"size":539,"mtime":1621894644000,"results":"19","hashOfConfig":"12"},{"size":2531,"mtime":1621968182365,"results":"20","hashOfConfig":"12"},{"size":561,"mtime":1621894644000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1atmns8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/juanma.dale/Desktop/board application/job-app/src/index.js",[],["48","49"],"/Users/juanma.dale/Desktop/board application/job-app/src/App.js",[],"/Users/juanma.dale/Desktop/board application/job-app/src/reportWebVitals.js",[],"/Users/juanma.dale/Desktop/board application/job-app/src/JobList.js",["50"],"import React, { useContext, useEffect } from 'react';\nimport { JobsContext } from './contexts/jobs.context';\nimport { Link } from 'react-router-dom';\nimport JobCard from './JobCard';\nimport SearchBar from './SearchBar';\nimport bigHeader from './assets/desktop/bg-pattern-header.svg';\nimport './JobList.scss';\n\nfunction JobList() {\n  const { fetchJobs, state : { searchedDescription, searchedLocation, page, fullTime, loading, jobs}, dispatch } = useContext(JobsContext);\n\n  useEffect(() => {\n    async function fetchData() {\n      let jobs = await fetchJobs();\n      dispatch({type: \"UPDATE\", payload: {jobs: jobs}});\n      dispatch({type: \"UPDATE\", payload: {loading: false}});\n    }\n    fetchData();\n  }, [])\n\n  //Switches pages\n  const switchPage = async (delta) => {\n    dispatch({type: \"UPDATE\", payload: {loading: true}});\n    const jobs = await fetchJobs(searchedDescription, searchedLocation, page + delta, fullTime);\n    dispatch({type: \"UPDATE\", payload: {jobs: jobs, page: page + delta}});\n    dispatch({type: \"UPDATE\", payload: {loading: false}});\n  }\n\n  //Renders spinner, jobs, or not found message\n  const renderJobs = () => {\n    let display;\n    if (loading) {\n      display = \n      <div className=\"spinner-wrapper\">\n      <div className=\"spinner\"/>\n    </div>    \n    } else if (!jobs.length) {\n      display = \n      <div className=\"no-jobs-wrapper\">\n        <h1>No jobs to display</h1>\n      </div>\n    } else {\n      display =  \n      <div className=\"card-display\">\n      {jobs.map(j =>(\n        <Link onClick={() => dispatch({type: \"UPDATE\", payload: {loading: true}})} key={j.id} to={`/${j.id}` }>\n          <JobCard\n            company={j.company}\n            location={j.location}\n            title={j.title}\n            type={j.type}\n            date={j.created_at}\n          />\n        </Link>\n      ))}\n    </div>   \n    }\n    return display;      \n  }\n \n  return (\n    <div className=\"JobList\">\n      <span className= \"header-title bold\">devjobs</span>\n      <img className=\"big-header-img\" src={bigHeader} alt=\"Header\" />\n      <div className=\"container\">  \n        <SearchBar/>    \n        {renderJobs()}\n        <div className=\"page-buttons\">\n          <button \n            className=\"previous-page btn-violet btn\" \n            onClick={() => switchPage(-1)}\n            disabled={\n              loading || \n              (!jobs.length && page === 0) ||\n              page === 0\n            }\n            >Previous\n            </button>\n          <h4 className=\"page-counter\">{!jobs.length ? \"\" : !loading ? `Page ${page + 1}` : \"\"}</h4>\n          <button \n            className=\"next-page btn-violet btn\" \n            onClick={() => switchPage(+1)}\n            disabled={loading || !jobs.length}\n            >Next\n            </button> \n        </div>  \n      </div>\n    </div>\n  )\n}\n\nexport default JobList;","/Users/juanma.dale/Desktop/board application/job-app/src/JobDetails.js",["51"],"import React, { useState, useEffect, useContext} from 'react';\nimport { JobsContext } from './contexts/jobs.context';\nimport axios from 'axios';\nimport './JobDetails.scss';\nimport TimeAgo from 'timeago-react';\nimport NotFound from './NotFound';\nimport { Link } from 'react-scroll';\nimport bigHeader from './assets/desktop/bg-pattern-header.svg';\n\nfunction JobDetails( routerProps ) { \n  const jobId = routerProps.match.params.jobId;\n  const [details, setDetails] = useState(\"\");\n  const [error, setError] = useState(false);\n  const { state, dispatch } = useContext(JobsContext);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let res = await axios.get(`https://secret-ocean-49799.herokuapp.com/https://jobs.github.com/positions/${jobId}.json`);\n        setDetails(res.data);\n        dispatch({type: \"UPDATE\", payload: {loading: false}});\n        console.log(res.data);    \n      } catch(e) {\n        setError(true);\n        dispatch({type: \"UPDATE\", payload: {loading: false}});\n        console.log(e)\n      }     \n    }\n    fetchData();  \n  }, [state.loading])\n\n  if (state.loading) {\n    return ( \n    <div className=\"spinner-wrapper\">\n    <div className=\"spinner\"/>\n  </div>    \n  )} else if (error === true) {\n    return <NotFound />\n  } else {\n    let company = details.company;\n    let companyLogo = details.company_logo;\n    let companyUrl = details.company_url;\n    let description = details.description;\n    let howToApply = details.how_to_apply;\n    let title = details.title;\n    let type = details.type;\n    let location = details.location;\n    const timeAgo = details.created_at;\n    //Extracts the HTML\n    function createMarkup(input) {\n      return {__html: input}\n    }\n    return (\n      <div className=\"JobDetails\">\n        <span className= \"header-title bold\">devjobs</span>\n        <img className=\"big-header-img\" src={bigHeader} alt=\"Header\" />\n        <div className=\"container\">\n          <div className=\"company-section\">\n            <div className=\"logo\">\n              <img src={companyLogo} alt=\"Company Logo\" ></img>\n            </div>\n            <div className=\"info\">\n                <div className=\"name-website\">\n                  <h2 className=\"bold\">{company}</h2>\n                  <h4>{companyUrl}</h4>\n                </div>\n                <a href={companyUrl} target=\"_blank\" rel=\"noreferrer\" className=\"btn-company-site btn-light-violet btn\">Company Site</a>\n            </div>\n          </div>\n          <div className=\"job-section\">\n            <div className=\"description-header\">\n              <div className=\"details\">\n                <h4 className=\"job-time-type\"><TimeAgo datetime={timeAgo}/><span> - </span> Part time</h4>\n                <h1 className=\"job-title bold\">{title}</h1>\n                <h4 className=\"job-location bold\">{type}, {location}</h4>\n              </div>\n              <Link to=\"how-to-apply\" spy={true} smooth={true}><button className=\"btn-apply btn-violet btn\">Apply Now</button></Link>\n            </div>\n            <div className=\"description-body\" dangerouslySetInnerHTML={createMarkup(description)}>\n            </div>     \n          </div>\n          <div id=\"how-to-apply\" className=\"how-to-apply-section\">\n            <h2 className=\"title bold\">How to Apply</h2>\n            <div className=\"instructions\" dangerouslySetInnerHTML={createMarkup(howToApply)}></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default JobDetails;","/Users/juanma.dale/Desktop/board application/job-app/src/NotFound.js",[],"/Users/juanma.dale/Desktop/board application/job-app/src/contexts/jobs.context.js",["52"],"import React, { createContext, useState, useReducer } from \"react\";\nimport JobsReducer from '../reducers/jobs.reducer';\nimport axios from 'axios';\n\nexport const JobsContext = createContext();\n\nexport function JobsProvider(props) {\n\n  const initialState = {\n    jobs: [],\n    description: \"\",\n    location: \"\",\n    searchedDescription: \"\",\n    searchedLocation: \"\",\n    page: 0,\n    fullTime: \"off\",\n    loading: true\n  }\n\n  const fetchJobs = async (description, location, page, fullTime) => {\n    try {\n      let res = await axios.get(\"https://secret-ocean-49799.herokuapp.com/https://jobs.github.com/positions.json\", {\n        params: {\n          description: description,\n          location: location,\n          page: page,\n          full_time: fullTime\n        }\n      });\n      return res.data;   \n    } catch(e) {\n      alert(e)\n    }\n  }\n\n  const [state, dispatch] = useReducer(JobsReducer, initialState);\n\n  return (\n    <JobsContext.Provider value={{fetchJobs, state, dispatch }}>\n      {props.children}\n    </JobsContext.Provider>\n  )\n};\n","/Users/juanma.dale/Desktop/board application/job-app/src/JobCard.js",[],"/Users/juanma.dale/Desktop/board application/job-app/src/SearchBar.js",["53"],"import React, { useContext, useEffect } from 'react';\nimport \"./SearchBar.scss\";\nimport { JobsContext } from './contexts/jobs.context';\n\nfunction SearchBar() {\n\n  const { fetchJobs, state : { jobs, page, description, location, searchedDescription, searchedLocation, fullTime, loading }, dispatch } = useContext(JobsContext);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    search();\n  }\n  \n  useEffect(()=> {\n    dispatch({type: \"UPDATE\", payload: {loading: true}});\n      const fetchData = async () => {\n        const jobs = await fetchJobs(searchedDescription, searchedLocation, page, fullTime);\n        dispatch({type: \"UPDATE\", payload: {jobs: jobs}})\n        dispatch({type: \"UPDATE\", payload: {loading: false}});\n      }\n      fetchData();\n  }, [fullTime])\n\n  const search = async () => {\n    dispatch({type: \"UPDATE\", payload: {loading: true}});\n    const jobs = await fetchJobs(description, location, 0, fullTime);\n    dispatch({type: \"UPDATE\", payload: {jobs: jobs, page: 0, searchedDescription: description, searchedLocation: location}});\n    dispatch({type: \"UPDATE\", payload: {loading: false}});\n  }\n\n  return (\n      <form className=\"SearchBar\" onSubmit={handleSubmit}>\n        <input\n          className=\"input-description heading-4\"\n          type=\"text\"\n          placeholder=\"Filter by description\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          onChange={e => dispatch({type: \"HANDLE_INPUT\", payload: {\n            value: e.target.value,\n            name: e.target.name\n          }})}\n        />\n        <input\n          className=\"input-location heading-4\"\n          type=\"text\"\n          placeholder=\"Filter by location\"\n          id=\"location\"\n          name=\"location\"\n          value={location}\n          onChange={e => dispatch({type: \"HANDLE_INPUT\", payload: {\n            value: e.target.value,\n            name: e.target.name\n          }})}\n        />\n        <div className=\"checkbox-search\">\n          <div className=\"checkbox-full-time\">\n            <input type=\"checkbox\" name=\"fullTime\" id=\"checkbox\" checked={fullTime === \"on\"} onChange={() => dispatch({type: \"SWITCH_FULL_TIME\"})} disabled={loading || !jobs.length}/>\n            <label htmlFor=\"checkbox\"></label>\n          </div>\n          <span className=\"heading-4 bold\">Full Time</span>\n        <button \n          className=\"btn-search btn-violet btn\"\n          disabled={loading}\n        >Search\n        </button>\n        </div>\n      </form>\n  )\n}\n\nexport default SearchBar;","/Users/juanma.dale/Desktop/board application/job-app/src/reducers/jobs.reducer.js",["54"],"\n\nconst JobsReducer = (state, action) => {\n  switch(action.type) {\n    case \"UPDATE\": \n      return {\n        ...state,\n        ...action.payload\n      }\n    case \"SWITCH_FULL_TIME\":\n      if (state.fullTime === \"off\") return {\n        ...state,\n        fullTime: \"on\"\n      }\n      if (state.fullTime === \"on\") return {\n        ...state,\n        fullTime: \"off\"\n      }\n    case \"HANDLE_INPUT\":\n      return {\n        ...state,\n        [action.payload.name]: action.payload.value\n      }\n    default: \n      return state    \n  }\n}\n\nexport default JobsReducer;\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":19,"column":6,"nodeType":"61","endLine":19,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":30,"column":6,"nodeType":"61","endLine":30,"endColumn":21,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":32,"nodeType":"67","messageId":"68","endLine":1,"endColumn":40},{"ruleId":"59","severity":1,"message":"69","line":22,"column":6,"nodeType":"61","endLine":22,"endColumn":16,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":19,"column":5,"nodeType":"73","messageId":"74","endLine":23,"endColumn":8},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchJobs'. Either include them or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'dispatch' and 'jobId'. Either include them or remove the dependency array.",["78"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'fetchJobs', 'page', 'searchedDescription', and 'searchedLocation'. Either include them or remove the dependency array.",["79"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [dispatch, fetchJobs]",{"range":"86","text":"87"},"Update the dependencies array to be: [dispatch, jobId, state.loading]",{"range":"88","text":"89"},"Update the dependencies array to be: [dispatch, fetchJobs, fullTime, page, searchedDescription, searchedLocation]",{"range":"90","text":"91"},[707,709],"[dispatch, fetchJobs]",[1076,1091],"[dispatch, jobId, state.loading]",[768,778],"[dispatch, fetchJobs, fullTime, page, searchedDescription, searchedLocation]"]